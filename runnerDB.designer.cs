#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17626
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace runnerSvc
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="runnerDB")]
	public partial class runnerDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEstadoHilo(EstadoHilo instance);
    partial void UpdateEstadoHilo(EstadoHilo instance);
    partial void DeleteEstadoHilo(EstadoHilo instance);
    #endregion
		
		public runnerDBDataContext() : 
				base(global::runnerSvc.Properties.Settings.Default.runnerDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public runnerDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public runnerDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public runnerDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public runnerDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EstadoHilo> EstadoHilo
		{
			get
			{
				return this.GetTable<EstadoHilo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstadoHilo")]
	public partial class EstadoHilo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _idThread;
		
		private int _pid;
		
		private System.Guid _idSimulacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidThreadChanging(System.Guid value);
    partial void OnidThreadChanged();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnidSimulacionChanging(System.Guid value);
    partial void OnidSimulacionChanged();
    #endregion
		
		public EstadoHilo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idThread", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid idThread
		{
			get
			{
				return this._idThread;
			}
			set
			{
				if ((this._idThread != value))
				{
					this.OnidThreadChanging(value);
					this.SendPropertyChanging();
					this._idThread = value;
					this.SendPropertyChanged("idThread");
					this.OnidThreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", DbType="Int NOT NULL")]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSimulacion", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid idSimulacion
		{
			get
			{
				return this._idSimulacion;
			}
			set
			{
				if ((this._idSimulacion != value))
				{
					this.OnidSimulacionChanging(value);
					this.SendPropertyChanging();
					this._idSimulacion = value;
					this.SendPropertyChanged("idSimulacion");
					this.OnidSimulacionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
